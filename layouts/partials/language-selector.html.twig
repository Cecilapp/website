          {#- Language switcher -#}
          {%- if page.translations|length >= 1 -%}
          {#- mobile ~#}
          <label class="sr-only" for="language">{% trans %}Language:{% endtrans %}</label>
          <select id="language" onchange="setLanguageCookie(value)" class="md:hidden w-14 border-0 p-0 bg-transparent text-gold hover:text-white" @change="document.location.href=$event.target.value">
            <option value="{{ url(page) }}" class="bg-darkblue dark:bg-dark">{{ page.language|upper }}</option>
            {%- for p in page.translations ~%}
              {%- if p.language is defined ~%}
            <option value="{{ url(p) }}" class="bg-darkblue dark:bg-dark">{{ p.language|language_name(site.language.locale(p.language))|capitalize }}</option>
              {%- endif ~%}
            {%- endfor ~%}
          </select>
          {#- desktop ~#}
          <div class="hidden md:flex justify-center">
            <div
              x-data="{
                open: false,
                toggle() {
                  if (this.open) {
                    return this.close()
                  }
                  this.open = true
                },
                close(focusAfter) {
                  if (! this.open) return
                  this.open = false
                  focusAfter && focusAfter.focus()
                }
              }"
              x-on:keydown.escape.prevent.stop="close($refs.button)"
              x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
              x-id="['dropdown-button']"
              class="relative"
            >
              <button
                x-ref="button"
                x-on:click="toggle()"
                :aria-expanded="open"
                :aria-controls="$id('dropdown-button')"
                type="button"
              >
                <span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 fill-gold hover:fill-white" viewbox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z" clip-rule="evenodd"/>
                  </svg>
                </span>
                <span class="text-gold hover:text-white">{{ page.language|upper }}</span>
              </button>
              <div
                x-ref="panel"
                x-show="open"
                x-transition.origin.top
                x-on:click.outside="close($refs.button)"
                :id="$id('dropdown-button')"
                style="display: none;"
                class="absolute left-0 mt-2 border-darkblue dark:border-black rounded-md bg-darkblue dark:bg-black overflow-hidden"
              >
                {%- for p in page.translations ~%}
                  {%- if p.language is defined ~%}
                <a href="{{ url(p) }}" onclick="setLanguageCookie('{{ p.language }}')" class="block w-full px-4 py-2 text-left hover:bg-gold hover:text-blue">{{ p.language|language_name(site.language.locale(p.language))|capitalize }}</a>
                  {%- endif ~%}
                {%- endfor ~%}
              </div>
            </div>
          </div>
          <script>{% apply minify_js ~%}
            function setLanguageCookie(language) {
              language = trimSlashes(language);
              if (language.length === 0) {
                language = 'en'; // default
              }
              document.cookie = 'nf_lang=' + language + '; path=/';
              console.log('nf_lang: ' + language);
            }
            function trimSlashes(str) {
              str = str.startsWith('/') ? str.substr(1) : str;
              str = str.endsWith('/') ? str.substr(0, str.length - 1) : str;
              return str;
            }
          {% endapply %}</script>
          {%- endif ~%}