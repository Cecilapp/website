/* Tailwind CSS */

/* ! tailwindcss v3.0.20 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Montserrat, sans-serif;
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

main a:hover:not(.btn):not(.menu-item), footer a:hover {
  -webkit-text-decoration-line: underline;
          text-decoration-line: underline;
}

a {
  --tw-text-opacity: 1;
  color: rgb(22 60 86 / var(--tw-text-opacity));
}

.dark a {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

img, svg {
  display: inline-block;
}

img {
  margin-bottom: 0.25rem;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 100%) {
  .container {
    max-width: 100%;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

.markdown {
  color: #092F44;
  max-width: 65ch;
}

.markdown :where([class~="lead"]):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.markdown :where(a):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.markdown :where(strong):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.markdown :where(ol):not(:where([class~="not-markdown"] *)) {
  list-style-type: decimal;
  padding-left: 1.625em;
}

.markdown :where(ol[type="A"]):not(:where([class~="not-markdown"] *)) {
  list-style-type: upper-alpha;
}

.markdown :where(ol[type="a"]):not(:where([class~="not-markdown"] *)) {
  list-style-type: lower-alpha;
}

.markdown :where(ol[type="A" s]):not(:where([class~="not-markdown"] *)) {
  list-style-type: upper-alpha;
}

.markdown :where(ol[type="a" s]):not(:where([class~="not-markdown"] *)) {
  list-style-type: lower-alpha;
}

.markdown :where(ol[type="I"]):not(:where([class~="not-markdown"] *)) {
  list-style-type: upper-roman;
}

.markdown :where(ol[type="i"]):not(:where([class~="not-markdown"] *)) {
  list-style-type: lower-roman;
}

.markdown :where(ol[type="I" s]):not(:where([class~="not-markdown"] *)) {
  list-style-type: upper-roman;
}

.markdown :where(ol[type="i" s]):not(:where([class~="not-markdown"] *)) {
  list-style-type: lower-roman;
}

.markdown :where(ol[type="1"]):not(:where([class~="not-markdown"] *)) {
  list-style-type: decimal;
}

.markdown :where(ul):not(:where([class~="not-markdown"] *)) {
  list-style-type: disc;
  padding-left: 1.625em;
}

.markdown :where(ol > li):not(:where([class~="not-markdown"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.markdown :where(ul > li):not(:where([class~="not-markdown"] *))::marker {
  color: var(--tw-prose-bullets);
}

.markdown :where(hr):not(:where([class~="not-markdown"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.markdown :where(blockquote):not(:where([class~="not-markdown"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.markdown :where(blockquote p:first-of-type):not(:where([class~="not-markdown"] *))::before {
  content: open-quote;
}

.markdown :where(blockquote p:last-of-type):not(:where([class~="not-markdown"] *))::after {
  content: close-quote;
}

.markdown :where(h1):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0;
  line-height: 1.1111111;
  padding-bottom: .3em;
  border-bottom: 1px solid #e5e7eb;
}

.markdown :where(h1 strong):not(:where([class~="not-markdown"] *)) {
  font-weight: 900;
}

.markdown :where(h2):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.markdown :where(h2 strong):not(:where([class~="not-markdown"] *)) {
  font-weight: 800;
}

.markdown :where(h3):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.markdown :where(h3 strong):not(:where([class~="not-markdown"] *)) {
  font-weight: 700;
}

.markdown :where(h4):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.markdown :where(h4 strong):not(:where([class~="not-markdown"] *)) {
  font-weight: 700;
}

.markdown :where(figure > *):not(:where([class~="not-markdown"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown :where(figcaption):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.markdown :where(code):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.markdown :where(code):not(:where([class~="not-markdown"] *))::before {
  content: "`";
}

.markdown :where(code):not(:where([class~="not-markdown"] *))::after {
  content: "`";
}

.markdown :where(a code):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-links);
}

.markdown :where(pre):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.markdown :where(pre code):not(:where([class~="not-markdown"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.markdown :where(pre code):not(:where([class~="not-markdown"] *))::before {
  content: none;
}

.markdown :where(pre code):not(:where([class~="not-markdown"] *))::after {
  content: none;
}

.markdown :where(table):not(:where([class~="not-markdown"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.markdown :where(thead):not(:where([class~="not-markdown"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.markdown :where(thead th):not(:where([class~="not-markdown"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.markdown :where(tbody tr):not(:where([class~="not-markdown"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.markdown :where(tbody tr:last-child):not(:where([class~="not-markdown"] *)) {
  border-bottom-width: 0;
}

.markdown :where(tbody td):not(:where([class~="not-markdown"] *)) {
  vertical-align: baseline;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.markdown {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: .875rem;
  line-height: 1.75;
}

.markdown :where(p):not(:where([class~="not-markdown"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.markdown :where(img):not(:where([class~="not-markdown"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.markdown :where(video):not(:where([class~="not-markdown"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.markdown :where(figure):not(:where([class~="not-markdown"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.markdown :where(h2 code):not(:where([class~="not-markdown"] *)) {
  font-size: 0.875em;
}

.markdown :where(h3 code):not(:where([class~="not-markdown"] *)) {
  font-size: 0.9em;
}

.markdown :where(li):not(:where([class~="not-markdown"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.markdown :where(ol > li):not(:where([class~="not-markdown"] *)) {
  padding-left: 0.375em;
}

.markdown :where(ul > li):not(:where([class~="not-markdown"] *)) {
  padding-left: 0.375em;
}

.markdown > :where(ul > li p):not(:where([class~="not-markdown"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.markdown > :where(ul > li > *:first-child):not(:where([class~="not-markdown"] *)) {
  margin-top: 1.25em;
}

.markdown > :where(ul > li > *:last-child):not(:where([class~="not-markdown"] *)) {
  margin-bottom: 1.25em;
}

.markdown > :where(ol > li > *:first-child):not(:where([class~="not-markdown"] *)) {
  margin-top: 1.25em;
}

.markdown > :where(ol > li > *:last-child):not(:where([class~="not-markdown"] *)) {
  margin-bottom: 1.25em;
}

.markdown :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-markdown"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.markdown :where(hr + *):not(:where([class~="not-markdown"] *)) {
  margin-top: 0;
}

.markdown :where(h2 + *):not(:where([class~="not-markdown"] *)) {
  margin-top: 0;
}

.markdown :where(h3 + *):not(:where([class~="not-markdown"] *)) {
  margin-top: 0;
}

.markdown :where(h4 + *):not(:where([class~="not-markdown"] *)) {
  margin-top: 0;
}

.markdown :where(thead th:first-child):not(:where([class~="not-markdown"] *)) {
  padding-left: 0;
}

.markdown :where(thead th:last-child):not(:where([class~="not-markdown"] *)) {
  padding-right: 0;
}

.markdown :where(tbody td:first-child):not(:where([class~="not-markdown"] *)) {
  padding-left: 0;
}

.markdown :where(tbody td:last-child):not(:where([class~="not-markdown"] *)) {
  padding-right: 0;
}

.markdown > :where(:first-child):not(:where([class~="not-markdown"] *)) {
  margin-top: 0;
}

.markdown > :where(:last-child):not(:where([class~="not-markdown"] *)) {
  margin-bottom: 0;
}

.markdown :where(h2 a):not(:where([class~="not-markdown"] *)) {
  font-weight: 700;
  text-decoration: none;
}

.markdown :where(.readmore):not(:where([class~="not-markdown"] *)) {
  text-decoration: none;
}

.markdown :where(h1, h2, h3, h4):not(:where([class~="not-markdown"] *)) {
  color: #092F44;
}

.markdown :where(a, a:hover):not(:where([class~="not-markdown"] *)) {
  color: #163C56;
}

.markdown :where(a.anchorjs-link, a.anchorjs-link:hover):not(:where([class~="not-markdown"] *)) {
  text-decoration: none;
}

.markdown :where(.anchorjs-link):not(:where([class~="not-markdown"] *)) {
  color: #d1d5db;
}

.visible {
  visibility: visible;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.-mx-4 {
  margin-left: -1rem;
  margin-right: -1rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-12 {
  height: 3rem;
}

.h-4 {
  height: 1rem;
}

.h-3 {
  height: 0.75rem;
}

.min-h-screen {
  min-height: 100vh;
}

.w-48 {
  width: 12rem;
}

.w-12 {
  width: 3rem;
}

.w-8 {
  width: 2rem;
}

.w-3 {
  width: 0.75rem;
}

.w-10 {
  width: 2.5rem;
}

.flex-none {
  flex: none;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.flex-grow {
  flex-grow: 1;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.overflow-y-auto {
  overflow-y: auto;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-l-2 {
  border-left-width: 2px;
}

.border-t {
  border-top-width: 1px;
}

.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.border-blue {
  --tw-border-opacity: 1;
  border-color: rgb(22 60 86 / var(--tw-border-opacity));
}

.border-bluegray {
  --tw-border-opacity: 1;
  border-color: rgb(123 153 169 / var(--tw-border-opacity));
}

.bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-blue {
  --tw-bg-opacity: 1;
  background-color: rgb(22 60 86 / var(--tw-bg-opacity));
}

.p-2 {
  padding: 0.5rem;
}

.p-1 {
  padding: 0.25rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.pt-6 {
  padding-top: 1.5rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pt-3 {
  padding-top: 0.75rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-6xl {
  font-size: 3.75rem;
  line-height: 1;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-light {
  font-weight: 300;
}

.leading-6 {
  line-height: 1.5rem;
}

.text-blue {
  --tw-text-opacity: 1;
  color: rgb(22 60 86 / var(--tw-text-opacity));
}

.text-darkblue {
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.no-underline {
  -webkit-text-decoration-line: none;
          text-decoration-line: none;
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Tailwind base styles */

/* ToC */

.toc {
  position: -webkit-sticky;
  position: sticky;
  top: 15px;
}

/* Back to top */

@media screen and (prefers-reduced-motion: no-preference) {
  html, body {
    scroll-behavior: smooth;
  }
}

.back-to-top-wrapper {
  position: relative;
  pointer-events: none;
}

.back-to-top-link {
  position: fixed;
  position: -webkit-sticky;
  position: sticky;
  pointer-events: all;
  top: calc(100vh - 3rem);
}

/* Typography */

h1, h2, h3, h4, h5, h6 {
  line-height: 1.5rem;
}

h1, h2 {
  margin-bottom: 1rem;
  font-weight: 600;
}

h1 {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

p {
  margin-bottom: 1rem;
}

header a {
  --tw-text-opacity: 1;
  color: rgb(242 208 127 / var(--tw-text-opacity));
}

.jumbotron {
  --tw-bg-opacity: 1;
  background-color: rgb(22 60 86 / var(--tw-bg-opacity));
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  text-align: center;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.dark .jumbotron {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

@media (min-width: 768px) {
  .jumbotron {
    padding-top: 5rem;
    padding-bottom: 5rem;
  }

  .jumbotron {
    text-align: left;
  }
}

/* Components */

.btn {
  margin-bottom: 0.5rem;
  display: inline-block;
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(22 60 86 / var(--tw-border-opacity));
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  -webkit-text-decoration-line: none;
          text-decoration-line: none;
}

a.btn {
  -webkit-text-decoration-line: none;
          text-decoration-line: none;
}

a.btn:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.btn:hover {
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: rgb(22 60 86 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.btn-sm {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.btn-gold {
  --tw-border-opacity: 1;
  border-color: rgb(242 208 127 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(242 208 127 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

.btn-gold:hover {
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

.dark a.btn-gold {
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

a.btn-gold:hover {
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

.btn-trans {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.btn-trans:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

a.btn-trans:hover {
  --tw-text-opacity: 1;
  color: rgb(9 47 68 / var(--tw-text-opacity));
}

/* Terminal */

.shell-wrap {
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.4);
  border-radius: 3px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  width: 450px;
  height: 323px;
  background: #000000;
}

.shell-top-bar {
  text-align: center;
  color: #525252;
  margin: 0;
  text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);
  font-size: 0.65em;
  border: 1px solid #cccccc;
  border-bottom: none;
  -webkit-border-top-left-radius: 3px;
  -webkit-border-top-right-radius: 3px;
  -moz-border-radius-topleft: 3px;
  -moz-border-radius-topright: 3px;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  background: #f7f7f7;
  /* Old browsers */
  /* FF3.6+ */
  /* Chrome, Safari4+ */
  /* Chrome10+, Safari5.1+ */
  /* Opera 11.10+ */
  /* IE10+ */
  background: linear-gradient(to bottom, #f7f7f7 0%, #b8b8b8 100%);
  /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f7f7f7', endColorstr='#B8B8B8',GradientType=0 );
  /* IE6-9 */
}

.shell-body {
  margin: 0;
  /*padding: 5px;*/
  /*padding-top: 6px;*/
  padding: 0;
  background: #000000;
  /*background: #171717;*/
  /*background: #191919;*/
  -webkit-border-bottom-right-radius: 3px;
  -webkit-border-bottom-left-radius: 3px;
  -moz-border-radius-bottomright: 3px;
  -moz-border-radius-bottomleft: 3px;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}

.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.dark .dark\:markdown-dark {
  color: #d1d5db;
}

.dark .dark\:markdown-dark :where(h1, h2, h3, h4, code, blockquote, strong):not(:where([class~="not-markdown"] *)) {
  color: #d1d5db;
}

.dark .dark\:markdown-dark :where(a, a:hover, a code):not(:where([class~="not-markdown"] *)) {
  color: #d1d5db;
}

.dark .dark\:markdown-dark :where(thead th):not(:where([class~="not-markdown"] *)) {
  color: #d1d5db;
}

.dark .dark\:translate-x-3 {
  --tw-translate-x: 0.75rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dark .dark\:border-darkgray {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
}

.dark .dark\:bg-gray-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

.dark .dark\:bg-dark {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.dark .dark\:bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.dark .dark\:text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

.dark .dark\:text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.dark .dark\:text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.dark .dark\:hover\:bg-darkgray:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

@media (min-width: 640px) {
  .sm\:inline-block {
    display: inline-block;
  }

  .sm\:hidden {
    display: none;
  }
}

@media (min-width: 768px) {
  .md\:float-right {
    float: right;
  }

  .md\:float-left {
    float: left;
  }

  .md\:mt-10 {
    margin-top: 2.5rem;
  }

  .md\:mt-0 {
    margin-top: 0px;
  }

  .md\:inline-flex {
    display: inline-flex;
  }

  .md\:grid {
    display: grid;
  }

  .md\:w-1\/2 {
    width: 50%;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:gap-x-8 {
    -moz-column-gap: 2rem;
         column-gap: 2rem;
  }

  .md\:gap-y-5 {
    row-gap: 1.25rem;
  }

  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .md\:border-t-0 {
    border-top-width: 0px;
  }

  .md\:pt-0 {
    padding-top: 0px;
  }

  .md\:text-left {
    text-align: left;
  }
}

@media (min-width: 1024px) {
  .lg\:block {
    display: block;
  }
}

@media (min-width: 1280px) {
  .xl\:block {
    display: block;
  }

  .xl\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }
}
